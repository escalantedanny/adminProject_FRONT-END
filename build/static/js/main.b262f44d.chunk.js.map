{"version":3,"sources":["context/alertas/alertaContext.js","context/autenticacion/authContext.js","components/auth/Login.js","components/auth/NuevaCuenta.js","context/proyectos/proyectoContext.js","components/proyectos/NuevoProyecto.js","context/tareas/tareaContext.js","components/proyectos/Proyecto.js","components/proyectos/ListadoProyectos.js","components/layouts/Sidebar.js","components/layouts/Barra.js","components/tareas/FormTarea.js","components/tareas/Tarea.js","components/tareas/ListadoTarea.js","components/proyectos/Proyectos.js","config/axios.js","context/proyectos/proyectoReducer.js","types/index.js","context/proyectos/proyectoState.js","context/tareas/tareaReducer.js","context/tareas/tareaState.js","context/alertas/alertaReducer.js","context/alertas/alertaState.js","context/autenticacion/authReducer.js","config/tokenAuth.js","context/autenticacion/authState.js","components/rutas/rutasPrivadas.js","App.js","serviceWorker.js","index.js"],"names":["AlertaContext","createContext","AuthContext","Login","props","alertaContext","useContext","alerta","mostrarAlerta","authContext","mensaje","autenticado","iniciarSession","useEffect","history","push","msg","categoria","useState","email","password","usuario","guardarUsuario","verificar","e","target","name","value","className","onSubmit","preventDefault","trim","length","htmlFor","type","id","placeholder","onChange","to","NuevaCuenta","AlertaConext","registrarUsuario","setTimeout","nombre","confirmar","ProyectoContext","NuevoProyecto","proyectosContext","proyectoContext","formulario","errorformulario","mostrarFormulario","esconderFormulario","agregarProyecto","mostrarError","proyecto","guardarProyecto","onClick","onDoubleClick","title","tareaContext","Proyecto","mostrarProyecto","obtenerTareas","TareaContext","_id","ListadoProyectos","proyectos","obtenerProyectos","obtenerProyectosAdmin","alertContext","AlertContext","AuthContest","rol","TransitionGroup","map","CSSTransition","key","timeout","classNames","Sidebar","align","Barra","usuarioAutenticado","cerrarSession","cargando","FormTarea","tareasContext","tareaSeleccionada","errorTarea","agregarTarea","validarTarea","actualizarTarea","guardarTarea","tarea","proyectoActual","Tarea","eliminarTarea","guardarTareaActual","cambiarEstado","estatus","seleccionarTarea","window","confirm","ListadoTarea","eliminaUnProyecto","tareasProyecto","Proyectos","clienteAxios","axios","create","baseURL","process","state","action","payload","filter","ProyectoState","useReducer","proyectoReducer","dispatch","a","ProyectoAxios","get","resultado","data","post","respuesta","proyectoId","delete","Provider","children","TareaState","TareaReducer","TareaAxios","params","tareas","put","AlertaState","alertaReducer","localStorage","setItem","token","removeItem","tokenAuth","defaults","headers","common","AuthState","initialState","getItem","AuthReducer","datos","response","console","log","error","RutaPrivada","Component","component","render","App","exact","path","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.b262f44d.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst AlertaContext = createContext();\n\nexport default AlertaContext;","import { createContext } from 'react';\n\nconst AuthContext = createContext();\n\nexport default AuthContext;","import React, {useState, useContext, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport AlertaContext from '../../context/alertas/alertaContext';\nimport AuthContext from '../../context/autenticacion/authContext'\n\nconst Login = (props) => {\n\n    //extraer los valores del conext de alerta\n    const alertaContext = useContext(AlertaContext);\n    const { alerta, mostrarAlerta} = alertaContext;\n\n    //extraer los valores del conext de autenticacion\n    const authContext = useContext(AuthContext);\n    const { mensaje, autenticado, iniciarSession } = authContext;\n    \n    // useEffect va a esatr a la escucha de cualqueir cambio en nuestra aplicacion\n    useEffect(() => {\n        if(autenticado)\n            props.history.push('/proyectos');\n        if(mensaje){\n            mostrarAlerta(mensaje.msg , mensaje.categoria);\n            return;\n        }\n        // eslint-disable-next-line\n    }, [mensaje, autenticado, props.history]);\n\n    const [usuario, guardarUsuario] = useState({\n        email: '',\n        password: ''\n    });\n\n    const { email, password } = usuario;\n\n    const verificar = e => {\n        guardarUsuario({\n            ...usuario,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    const validarUsuario = e => {\n        e.preventDefault();\n\n        // validar que no tenga campos vacios\n        if(email.trim() === '' || password.trim() === '' ){\n            mostrarAlerta('Todos los campos son obligatorios', 'alerta-error');\n            return;\n        }\n        if(password.length < 6 ){\n            mostrarAlerta('El password debe tener minimo 6 caracteres', 'alerta-error');\n            return;\n        }\n\n        iniciarSession({email, password});\n    }\n\n        return ( \n            <div className=\"form-usuario\">\n                { alerta ? ( <div className={`alerta ${alerta.categoria}`}> {alerta.msg} </div> )  : null }\n                <div className=\"contenedor-form sombra-dark\">\n                    <h1>Iniciar Sesión</h1>\n\n                    <form onSubmit={validarUsuario} >\n                        <div className=\"campo-form\">\n                            <label htmlFor=\"email\">Email</label>\n                            <input\n                                type=\"email\"\n                                id=\"email\"\n                                name=\"email\"\n                                value={email}\n                                placeholder=\"Tu Email\"\n                                onChange={verificar}\n                            />\n                        </div>\n                        <div className=\"campo-form\">\n                            <label htmlFor=\"password\">Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"password\"\n                                name=\"password\"\n                                value={password}\n                                placeholder=\"Tu Password\"\n                                onChange={verificar}\n                            />\n                        </div>\n\n                        <div className=\"campo-form\">\n                            <input \n                                type=\"submit\"\n                                className=\"btn btn-primario btn-block\"\n                                name=\"iniciar\"\n                                id=\"iniciar\"\n                                value=\"Iniciar Sessión\"\n                            />\n                        </div>\n                    </form>\n                    <Link to={'/nueva-cuenta'} className=\"enlace-cuenta\">\n                        Registrarme\n                    </Link>\n                </div>\n            </div>\n        );\n    }\n \nexport default Login;","import React, { useState, useContext, useEffect } from 'react';\nimport {Link} from 'react-router-dom';\nimport AlertaConext from '../../context/alertas/alertaContext';\nimport AuthContext from '../../context/autenticacion/authContext'\n\nconst NuevaCuenta = (props) => {\n\n    //extraer los valores del conext de alerta\n    const alertaContext = useContext(AlertaConext);\n    const { alerta, mostrarAlerta} = alertaContext;\n\n    //extraer los valores del conext de autenticacion\n    const authContext = useContext(AuthContext);\n    const { mensaje, autenticado, registrarUsuario } = authContext;\n\n    // useEffect va a esatr a la escucha de cualqueir cambio en nuestra aplicacion\n    useEffect(() => {\n\n        if(autenticado) {\n            mostrarAlerta('Registrado Correctamente' , 'alerta-ok');\n            setTimeout(() => {\n                props.history.push('/'); \n                //props.history.push('/proyectos'); // indicamos a donde queremos ir despues de autenticar\n            }, 2000);\n        }\n        if(mensaje){\n            mostrarAlerta(mensaje.msg , mensaje.categoria);\n            return;\n        }\n        // eslint-disable-next-line\n    }, [mensaje, autenticado, props.history]);\n\n    const [usuario, guardarUsuario] = useState({\n        nombre : '',\n        email: '',\n        password: '',\n        confirmar: ''\n    });\n\n    const { nombre, email, password, confirmar } = usuario;\n\n    const verificar = e => {\n        guardarUsuario({\n            ...usuario,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    const validarUsuario = e => {\n        e.preventDefault();\n        \n        // validar que no tenga campos vacios\n        if(nombre.trim() === '' || email.trim() === '' || password.trim() === '' || confirmar.trim() === ''){\n            mostrarAlerta('Todos los campos son obligatorios', 'alerta-error');\n            return;\n        }\n        if(password.length < 6 || confirmar.length < 6){\n            mostrarAlerta('El password debe tener minimo 6 caracteres', 'alerta-error');\n            return;\n        }\n        if(password !== confirmar ){\n            mostrarAlerta('La contraseña y la confirmacion deben ser iguales', 'alerta-error');\n            return;\n        }\n\n        //pasarlo al action\n        registrarUsuario({\n            nombre,\n            email,\n            password \n        });\n\n    }\n\n        return ( \n            <div className=\"form-usuario\">\n            { (alerta)? <div className= {`alerta ${alerta.categoria}`}>{ alerta.msg }</div>: null }\n                <div className=\"contenedor-form sombra-dark\">\n                    <h1>Registro de Usuario</h1>\n\n                    <form onSubmit={validarUsuario} >\n                        <div className=\"campo-form\">\n                            <label htmlFor=\"nombre\">Nombre</label>\n                            <input\n                                type=\"text\"\n                                id=\"nombre\"\n                                name=\"nombre\"\n                                value={nombre}\n                                placeholder=\"Tu Nombre\"\n                                onChange={verificar}\n                            />\n                        </div>                       \n                        <div className=\"campo-form\">\n                            <label htmlFor=\"email\">Email</label>\n                            <input\n                                type=\"email\"\n                                id=\"email\"\n                                name=\"email\"\n                                value={email}\n                                placeholder=\"Tu Email\"\n                                onChange={verificar}\n                            />\n                        </div>\n                        <div className=\"campo-form\">\n                            <label htmlFor=\"password\">Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"password\"\n                                name=\"password\"\n                                value={password}\n                                placeholder=\"Tu Password\"\n                                onChange={verificar}\n                            />\n                        </div>\n                        <div className=\"campo-form\">\n                            <label htmlFor=\"confirmar\">Repetir Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"confirmar\"\n                                name=\"confirmar\"\n                                value={confirmar}\n                                placeholder=\"Repetir Password\"\n                                onChange={verificar}\n                            />\n                        </div>\n\n                        <div className=\"campo-form\">\n                            <input \n                                type=\"submit\"\n                                className=\"btn btn-primario btn-block\"\n                                name=\"iniciar\"\n                                id=\"iniciar\"\n                                value=\"Registrarme\"\n                            />\n                        </div>\n                    </form>\n                    <Link to={'/'} className=\"enlace-cuenta\">\n                        Volver a Iniciar Sessión\n                    </Link>\n                </div>\n            </div>\n        );\n    }\n \nexport default NuevaCuenta;","import { createContext } from 'react';\n\nconst ProyectoContext = createContext();\n\nexport default ProyectoContext;","import React, { Fragment, useState, useContext } from 'react';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\n\nconst NuevoProyecto = () => {\n\n    //obtener el estate del formulario\n    const proyectosContext = useContext(proyectoContext);\n\n    //importar formulario del context\n    const { formulario, errorformulario, mostrarFormulario, esconderFormulario, agregarProyecto, mostrarError } = proyectosContext;\n\n    const [proyecto, guardarProyecto] = useState({\n        nombre : ''\n    }); \n\n    //destructuring\n    const { nombre } = proyecto;\n\n    const onChangeProyecto = e => {\n        guardarProyecto({\n            ...proyecto,\n            [e.target.name] : e.target.value\n        });\n    }\n \n    const crearProyecto = () => {\n        mostrarFormulario();\n    }\n\n    const esconder = () => {\n        esconderFormulario();\n    }\n\n    // Cuando el usuario envia el proyecto\n    const sendProyecto = e => {\n        e.preventDefault();\n\n        //validar proyecto\n        if(nombre === ''){\n            mostrarError();\n            return;\n        }\n\n        // agregamos el proyecto al listado\n        agregarProyecto(proyecto);\n\n        //reiniciamos el form\n        guardarProyecto({\n            nombre: ''\n        })\n\n    }\n\n    return ( \n        <Fragment>\n            <button \n            value=\"button\"\n            className=\"btn btn-primario\"\n            onClick={crearProyecto}\n            onDoubleClick={esconder}\n            title=\"Agrega un Proyecto Nuevo\"\n            ><span className=\"material-icons\">\n            gamepad\n            </span> &nbsp;<span>Nuevo Proyecto</span></button>\n\n            {   formulario ? \n                    (\n                        <form className=\"formulario-nuevo-proyecto\" onSubmit={sendProyecto}>\n                            <input type=\"text\" className=\"input-text\" placeholder=\"Nombre del Proyecto\" name=\"nombre\" value={nombre} onChange={onChangeProyecto}/>\n                            <input type=\"submit\" className=\"btn btn-primario btn-block\" value=\"Agregar Proyecto\"/>\n                        </form>\n                    ) : null }\n            { errorformulario \n                ?  (<p className=\"mensaje error\">El Nombre del Proyecto debe ser Obligatorio</p>)\n                : null }\n\n        </Fragment>\n     );\n}\n \nexport default NuevoProyecto;","import { createContext } from 'react';\r\n\r\nconst tareaContext = createContext();\r\n\r\nexport default tareaContext;","import React, {useContext, Fragment} from 'react';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\nimport TareaContext from '../../context/tareas/tareaContext';\n\nconst Proyecto = ({proyecto}) => {\n\n    //obtener el estate del proyecto\n    const proyectosContext = useContext(proyectoContext);\n    const { mostrarProyecto } = proyectosContext;\n\n    //importar formulario del context\n    const tareaContext = useContext(TareaContext);\n    const { obtenerTareas } = tareaContext;\n\n    // funcion para agregar proyecto actual\n    const seleccionarProyecto = id => {\n        mostrarProyecto(id);\n        obtenerTareas(id);\n    }\n\n    return ( \n        <Fragment>\n            <li>\n                <button\n                type=\"button\"\n                className=\"btn btn-blank\"\n                onClick={ () => seleccionarProyecto(proyecto._id)}\n                ><i className=\"material-icons\">desktop_windows</i>&nbsp;&nbsp;{proyecto.nombre}\n                </button>\n            </li>\n        </Fragment>    \n     );\n}\n \nexport default Proyecto;","import React, {useContext, useEffect} from 'react';\nimport Proyecto from './Proyecto';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\nimport AlertContext from '../../context/alertas/alertaContext';\nimport AuthContest from '../../context/autenticacion/authContext';\n\nconst ListadoProyectos = () => {\n\n    //Extraer proyectos de state inicial\n    const proyectosContext = useContext(proyectoContext);\n    //importar formulario del context\n    const { mensaje, proyectos, obtenerProyectos, obtenerProyectosAdmin } = proyectosContext;\n\n    //Extraer alertas de state inicial\n    const alertContext = useContext(AlertContext);\n    //importar alertas del context\n    const { alerta, mostrarAlerta } = alertContext;\n\n    //Extraer alertas de state inicial\n    const authContest = useContext(AuthContest);\n    //importar alertas del context\n    const { usuario } = authContest;\n    \n    //obtener proyectos cuando carga el componente\n    useEffect(() => {\n        //si existe un error\n        if(mensaje){\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\n        }\n        if(usuario && usuario.rol === 2) {\n            obtenerProyectos();\n        }else{\n            obtenerProyectosAdmin();\n        }\n        // eslint-disable-next-line\n    }, [mensaje]); // se pasa mensaje como dependencia para que quede escuchando si existe o no mensaje\n\n    // revisar si proyectos tiene contenido\n    if(proyectos.length === 0) return <h2>No Tienes Proyectos</h2>;\n\n    return ( \n        <ul className=\"listado-proyectos\">\n            { alerta ? ( <div className={`alerta ${mensaje.categoria}`}>{mensaje.msg}</div> ) : null}\n            <TransitionGroup> \n                {proyectos.map( proyecto => (\n                    <CSSTransition key={proyecto._id} timeout={200} classNames=\"proyecto\">\n                        <Proyecto \n                            proyecto={proyecto} \n                        />\n                    </CSSTransition>\n                ))}\n            </TransitionGroup> \n            \n        </ul>\n     );\n}\n \nexport default ListadoProyectos;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport NuevoProyecto from '../proyectos/NuevoProyecto';\nimport ListadoProyectos from '../proyectos/ListadoProyectos';\n\n\nconst Sidebar = () => {\n    return (\n        <aside>\n            <Link to={'/proyectos'}>\n                <h1>Ticket <span>soft</span></h1>\n            </Link>\n            <div><hr></hr></div>\n            \n            <NuevoProyecto/>\n\n            <div className=\"proyectos\">\n            <Link to={'/proyectos'}>\n                    <h3 align=\"center\">\n                        <u>Listado de Aplicaciones</u>\n                    </h3>\n            </Link>\n                <ListadoProyectos/>\n            </div>\n        </aside>\n    );\n}\nexport default Sidebar;","import React, { useContext, useEffect } from 'react';\nimport AuthContext from '../../context/autenticacion/authContext';\n\nconst Barra = () => {\n\n    //extraer la informacion de autenticacion\n    const authContext = useContext(AuthContext);\n    const { usuario, usuarioAutenticado, cerrarSession, cargando } = authContext;\n\n    useEffect( () => {\n        usuarioAutenticado();\n        // eslint-disable-next-line\n    }, [])\n\n    const cerrarSesion = () => {\n        cerrarSession();\n    }\n    \n\n    return ( \n        <header className=\"app-header\">\n            { usuario && !cargando ? <p className=\"nombre-usuario\">Hola <span>{usuario.nombre}</span></p> : '' }<br></br>\n            <nav className=\"nav-principal\">\n                <button className=\"btn btn-blank cerrar-sesion\" onClick={cerrarSesion}>\n                    Cerrar Sessión\n                </button>\n            </nav>\n        </header>\n     );\n}\n \nexport default Barra;","import React, { useContext, useState, useEffect } from 'react';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\nimport TareaContext from '../../context/tareas/tareaContext';\n\n\nconst FormTarea = () => {\n    \n    \n    //obtener si un proyecto esta activo\n    const proyectosContext = useContext(proyectoContext);\n    //importar formulario del context\n    const { proyecto } = proyectosContext;\n\n    //obtenemos context de tareas\n    const tareasContext = useContext(TareaContext);\n    //importar las tareas del formulario\n    const { tareaSeleccionada, errorTarea, agregarTarea, validarTarea, obtenerTareas, actualizarTarea } = tareasContext;\n\n    // para cambiar en el tiempo de ejecucion la manipulacion\n    // que detecta si  es una tarea seleccionada\n    useEffect(() => {\n        if(tareaSeleccionada !== null) {\n            guardarTarea(tareaSeleccionada)\n        } else {\n            guardarTarea({\n                nombre : '',\n            });\n        }\n    }, [tareaSeleccionada])\n\n    // agregamos state del formulario\n    const [tarea, guardarTarea] = useState({\n        nombre: ''\n    })\n\n    // extraemos el nombre del proyecto\n    const { nombre } = tarea;\n\n    // si no se a seleccionado ningun proyecto\n    if(!proyecto) return null;\n\n    // aplicacion array Destructuring  para extraer el proyecto actual\n    const [proyectoActual] = proyecto;\n\n    // leer los valores del formulario\n    const handleChange = e => {\n        guardarTarea({\n            ...tarea,\n            [e.target.name]: e.target.value\n        })\n    }\n     \n    const onSubmit = e => {\n       e.preventDefault();\n\n        // validar input del formulario para agregar una tarea\n        if(nombre.trim() === '') {\n            validarTarea();\n            return;\n        }\n\n        // revizamos si existe agregar o editar\n        if(tareaSeleccionada === null) {\n            // agregar nueva tarea al state de tarea\n            tarea.proyecto = proyectoActual._id;\n            agregarTarea(tarea);\n        } else {\n            actualizarTarea(tarea);\n        }\n\n\n        // obtenemos la tarea y filtrarlas\n        obtenerTareas(proyectoActual.id);\n\n        // reiniciar el form\n        guardarTarea({\n            nombre : '',\n        });\n\n\n    }\n\n    return ( \n        <div className=\"formulario\">\n            <form\n                onSubmit={onSubmit}\n            >\n                <div className=\"contenedor-input\">\n                    <input type=\"text\" className=\"input-text\" placeholder=\"Nombre tarea\" name=\"nombre\" onChange={handleChange} value={nombre} />\n                </div>\n                <div className=\"contenedor-input\">\n                    <input type=\"submit\" className=\"btn btn-primario btn-block\" value={ tareaSeleccionada ? 'Editar Tarea' : 'Guardar Tarea' } />\n                </div>\n            </form>\n            { errorTarea ? <p className=\"mensaje error\">El nombre de la Tarea es Obligatorio</p> :  null }\n        </div>\n     );\n}\n \nexport default FormTarea;","import React, { useContext } from 'react';\nimport TareaContext from '../../context/tareas/tareaContext';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\n\nconst Tarea = ({tarea}) => {\n\n    //obtenemos context de tareas\n    const tareasContext = useContext(TareaContext);\n    //importar las tareas del formulario\n    const { eliminarTarea, obtenerTareas, actualizarTarea, guardarTareaActual } = tareasContext;\n\n    //obtener si un proyecto esta activo\n    const proyectosContext = useContext(proyectoContext);\n    //importar formulario del context\n    const { proyecto } = proyectosContext;\n\n    // aplicacion array Destructuring  para extraer el proyecto actual\n    const [proyectoActual] = proyecto;\n\n    const deleteTarea = id => {\n        if (window.confirm(`Estas Seguro de eliminar ${tarea.nombre}?`)) {\n            eliminarTarea(id, proyectoActual._id);\n            obtenerTareas(proyectoActual.id);\n        }\n    }\n\n    const cambiarEstado = tarea => {\n        \n        if(tarea.estatus){\n            tarea.estatus = false;\n        } else {\n            tarea.estatus = true;\n        }\n        \n        actualizarTarea(tarea);\n    }\n\n    const seleccionarTarea = tarea => {\n        guardarTareaActual(tarea);\n    }\n\n    return ( \n        <li className=\"tarea sombra\">\n            <p>{tarea.nombre}</p>\n            <div className=\"estado\">\n                {tarea.estatus\n                    ? <button type=\"button\" className=\"completo\" onClick={() => cambiarEstado(tarea)}>Completo</button>\n                    : <button type=\"button\" className=\"incompleto\" onClick={() => cambiarEstado(tarea)}>Incompleto</button>\n                }\n            </div>\n            <div className=\"acciones\">\n                <button type=\"button\" className=\"btn btn-primario\" onClick={ () => seleccionarTarea(tarea)}>Editar</button>\n                <button type=\"button\" className=\"btn btn-secundario\" onClick={ () => deleteTarea(tarea._id) } >Eliminar</button>\n            </div>\n        </li>\n     );\n}\n \nexport default Tarea;","import React, { Fragment, useContext, useEffect} from 'react';\nimport Tarea from './Tarea';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\nimport TareaContext from '../../context/tareas/tareaContext';\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\nimport AlertContext from '../../context/alertas/alertaContext';\n\nconst ListadoTarea = () => {\n\n    //obtener el estate del proyecto\n    const proyectosContext = useContext(proyectoContext);\n    const { proyecto, eliminaUnProyecto } = proyectosContext;\n\n    //importar formulario del context\n    const tareaContext = useContext(TareaContext);\n    const { mensaje, tareasProyecto } = tareaContext;\n\n    //Extraer alertas de state inicial\n    const alertContext = useContext(AlertContext);\n    //importar alertas del context\n    const { alerta, mostrarAlerta } = alertContext;\n\n    //obtener proyectos cuando carga el componente\n    useEffect(() => {\n        //si existe un error\n        if(mensaje){\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\n        }\n        // eslint-disable-next-line\n    }, [mensaje]); \n\n    // si no se a seleccionado ningun proyecto\n    if(!proyecto) return <h2>Selecciona un Proyecto</h2>\n\n    // aplicacion array Destructuring  para extraer el proyecto actual\n    const [proyectoActual] = proyecto;\n\n    // elimina un proyecto\n    const EliminarProyectoSeleccionado = () => {\n\n        if (window.confirm(`Estas Seguro de eliminar ${proyectoActual.nombre}?`)) \n            eliminaUnProyecto(proyectoActual._id); \n\n    }\n    return ( \n        <Fragment>\n            <h2>Proyecto: {proyectoActual.nombre}</h2>\n\n            <ul className=\"listado-tareas\">\n                { alerta ? ( <div className={`alerta ${mensaje.categoria}`}>{mensaje.msg}</div> ) : null}\n                { tareasProyecto.length === 0\n                    ? (<li className=\"tarea\"><p>No hay tareas Asignadas</p></li>) \n                    : \n                    <TransitionGroup>   \n                        {\n                            tareasProyecto.map(tarea => (\n                                <CSSTransition key={tarea._id} timeout={200} classNames=\"tarea\"><Tarea tarea={tarea} /></CSSTransition>\n                            ))\n                        }\n                    </TransitionGroup> \n                }\n            </ul>\n\n            <button type=\"button\" className=\"btn btn-eliminar\" onClick={EliminarProyectoSeleccionado} >\n                Eliminar Proyecto\n            </button>\n        </Fragment>\n     );\n}\n \nexport default ListadoTarea;","import React, { useContext, useEffect } from 'react';\nimport Sidebar from '../layouts/Sidebar';\nimport Barra from '../layouts/Barra';\nimport FormTarea from '../tareas/FormTarea';\nimport ListadoTarea from '../tareas/ListadoTarea';\nimport AuthContext from '../../context/autenticacion/authContext';\n\nconst Proyectos = () => {\n\n    //extraer la informacion de autenticacion\n    const authContext = useContext(AuthContext);\n    const { usuarioAutenticado } = authContext;\n\n    useEffect( () => {\n        usuarioAutenticado();\n        // eslint-disable-next-line\n    },[])\n\n    return ( \n        <div className=\"contenedor-app\">\n            <Sidebar/>\n            <div className=\"seccion-principal\">\n                <Barra/>\n\n                <main>\n\n                    <FormTarea />\n\n                    <div className=\"contenedor-tareas\">\n                        <ListadoTarea />\n                    </div>\n                        \n                </main>\n            </div>\n        </div>\n     );\n}\n \nexport default Proyectos;","import axios from 'axios';\n\nconst clienteAxios = axios.create({\n    baseURL : process.env.REACT_APP_BACKEND_URL\n});\n\nexport default clienteAxios;","import {\n    FORMULARIO_PROYECTO, \n    OBTENER_PROYECTOS, \n    AGREGAR_PROYECTO,\n    PROYECTO_ERROR, \n    VALIDAR_FORMULARIO,\n    PROYECTO_ACTUAL,\n    ELIMINAR_PROYECTO,\n    OCULTAR_ACTUAL,\n    MOSTRAR_TODOS_PROYECTOS\n} from '../../types';\n\nexport default (state, action) => {\n    \n    switch(action.type) {\n        case FORMULARIO_PROYECTO:\n            return {\n                ...state,\n                formulario: true\n            }\n        case OBTENER_PROYECTOS:\n            return {\n                ...state,\n                proyectos: action.payload // obtenemos el proyecto seleccionado\n            }\n        case AGREGAR_PROYECTO:\n            return {\n                ...state,\n                proyectos: [...state.proyectos, action.payload], // agregamos el proyecto completo al hacer click en el componente\n                formulario: false,\n                errorformulario : false\n            }\n        case VALIDAR_FORMULARIO:\n            return {\n                ...state,\n                errorformulario : true \n            }\n        case PROYECTO_ACTUAL:\n            return {\n                ...state, \n                proyecto: state.proyectos.filter(proyecto => proyecto._id === action.payload) // filtramos por el proyecto seleccionado\n            }\n        case ELIMINAR_PROYECTO:\n            return {\n                ...state, \n                proyectos: state.proyectos.filter(proyecto => proyecto._id !== action.payload), // filtramos por el proyecto seleccionado para eliminarlo  \n                proyecto : null               \n            }\n        case PROYECTO_ERROR:\n            return {\n                ...state,\n                mensaje: action.payload\n            }\n        case OCULTAR_ACTUAL:\n            return {\n                ...state,\n                formulario: false\n            }\n        case MOSTRAR_TODOS_PROYECTOS:\n            return {\n                ...state,\n                proyectos: action.payload\n            }\n        default: \n            return state;\n\n    }\n\n}","export const FORMULARIO_PROYECTO = 'FORMULARIO_PROYECTO';\nexport const OBTENER_PROYECTOS = 'OBTENER_PROYECTOS';\nexport const AGREGAR_PROYECTO = 'AGREGAR_PROYECTO';\nexport const VALIDAR_FORMULARIO = 'VALIDAR_FORMULARIO';\nexport const PROYECTO_ACTUAL = 'PROYECTO_ACTUAL';\nexport const ELIMINAR_PROYECTO = 'ELIMINAR_PROYECTO';\nexport const PROYECTO_ERROR = 'PROYECTO_ERROR';\nexport const OCULTAR_ACTUAL = 'OCULTAR_ACTUAL';\nexport const MOSTRAR_TODOS_PROYECTOS = 'MOSTRAR_TODOS_PROYECTOS';\n\nexport const TAREAS_PROYECTO = 'TAREAS_PROYECTO';\nexport const AGREGAR_TAREA = 'AGREGAR_TAREA';\nexport const VALIDAR_TAREA = 'VALIDAR_TAREA';\nexport const ELIMINAR_TAREA = 'ELIMINAR_TAREA';\nexport const TAREA_ACTUAL = 'TAREA_ACTUAL';\nexport const ACTUALIZAR_TAREA = 'ACTUALIZAR_TAREA';\nexport const TAREA_ERROR = 'TAREA_ERROR';\n\nexport const MOSTRAR_ALERTA = 'MOSTRAR_ALERTA';\nexport const OCULTAR_ALERTA = 'OCULTAR_ALERTA';\n\nexport const REGISTRO_EXITOSO = 'REGISTRO_EXITOSO';\nexport const REGISTRO_ERROR = 'REGISTRO_ERROR';\nexport const OBTENER_USUARIO = 'OBTENER_USUARIO';\nexport const LOGIN_EXITOSO = 'LOGIN_EXITOSO';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\nexport const CERRAR_SESSION = 'CERRAR_SESSION';","import React, { useReducer } from 'react';\nimport ProyectoAxios from '../../config/axios';\n // import uuid from 'uuid';\n\nimport proyectoContext from './proyectoContext';\nimport proyectoReducer from './proyectoReducer';\nimport {\n            FORMULARIO_PROYECTO, \n            OBTENER_PROYECTOS, \n            AGREGAR_PROYECTO, \n            VALIDAR_FORMULARIO,\n            PROYECTO_ACTUAL,\n            ELIMINAR_PROYECTO,\n            PROYECTO_ERROR,\n            OCULTAR_ACTUAL,\n            MOSTRAR_TODOS_PROYECTOS \n        } from '../../types';\n\nconst ProyectoState = props => {\n\n    const initialState = {\n        proyectos : [],\n        formulario : false,\n        errorformulario : false,\n        proyecto: null,\n        mensaje: null\n    }\n\n    //dispatch para ejecutar las acciones\n    const [state, dispatch] = useReducer(proyectoReducer, initialState)\n\n    const mostrarFormulario = () => {\n        dispatch({\n            type: FORMULARIO_PROYECTO\n        })\n    }\n\n    //obtener los proyectos  con dispatch\n    const obtenerProyectos = async () => {\n        try {\n            const resultado = await ProyectoAxios.get('/api/tikets/proyectos');\n\n            dispatch({\n                type: OBTENER_PROYECTOS,\n                payload: resultado.data.proyectos\n            })\n        } catch (error) {\n            const alerta = {\n                msg: \"Hubo un error\",\n                categoria: \"alerta-error\"\n            }\n            dispatch({\n                type: PROYECTO_ERROR,\n                payload: alerta\n            })\n        }\n\n    }\n\n    // agregamos nuevo proyecto al aside\n    const agregarProyecto = async proyecto => {\n\n        // funcion NECESARIA cuando elmanejador no tiene in ID proyecto.id = uuid.v4();\n        try {\n            const respuesta = await ProyectoAxios.post('/api/tikets/proyectos', proyecto);\n            \n            //insertar proyecto en el state\n            dispatch({\n                type: AGREGAR_PROYECTO,\n                payload: respuesta.data\n            });\n        } catch (error) {\n            const alerta = {\n                msg: \"Hubo un error\",\n                categoria: \"alerta-error\"\n            }\n            dispatch({\n                type: PROYECTO_ERROR,\n                payload: alerta\n            })\n        }\n\n    }\n\n    //valida el formulario para que sea vacio\n    const mostrarError = () => {\n        dispatch({\n            type: VALIDAR_FORMULARIO\n        })\n    }\n\n    //SELECCIONA EL PROYECTO QUE EL USUARIO LE DIO CLICK\n    const mostrarProyecto = proyectoId => {\n        dispatch({\n            type: PROYECTO_ACTUAL,\n            payload: proyectoId\n        });\n    }\n\n    //ELIMINA EL PROYECTO QUE EL USUARIO LE DIO CLICK\n    const eliminaUnProyecto = async proyectoId => {\n\n        try {\n            await ProyectoAxios.delete(`/api/tikets/proyectos/${proyectoId}`);\n            dispatch({\n                type: ELIMINAR_PROYECTO,\n                payload: proyectoId\n            });\n        } catch (error) {\n            const alerta = {\n                msg: \"Hubo un error\",\n                categoria: \"alerta-error\"\n            }\n            dispatch({\n                type: PROYECTO_ERROR,\n                payload: alerta\n            })\n        }\n        \n\n        \n    }\n\n    const esconderFormulario = () => {\n        dispatch({\n            type: OCULTAR_ACTUAL\n        });\n    }\n\n    const obtenerProyectosAdmin =  async () => {\n\n        try {\n            const resultado = await ProyectoAxios.get('/api/tikets/proyectos/');\n\n            dispatch({\n                type: MOSTRAR_TODOS_PROYECTOS,\n                payload: resultado.data.proyectos\n            })\n        } catch (error) {\n            const alerta = {\n                msg: \"Hubo un error\",\n                categoria: \"alerta-error\"\n            }\n            dispatch({\n                type: PROYECTO_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n    return (\n        <proyectoContext.Provider \n            value={{\n                proyectos: state.proyectos,\n                formulario: state.formulario, \n                errorformulario: state.errorformulario,\n                proyecto: state.proyecto,\n                mensaje: state.mensaje,\n                mostrarFormulario,\n                obtenerProyectos,\n                agregarProyecto,\n                mostrarError,\n                mostrarProyecto,\n                eliminaUnProyecto,\n                esconderFormulario,\n                obtenerProyectosAdmin\n            }}\n        >\n            {props.children}\n        </proyectoContext.Provider>\n    );\n}\n\nexport default ProyectoState;","import {\r\n    TAREAS_PROYECTO,\r\n    AGREGAR_TAREA,\r\n    VALIDAR_TAREA,\r\n    ELIMINAR_TAREA,\r\n    TAREA_ERROR,\r\n    TAREA_ACTUAL,\r\n    ACTUALIZAR_TAREA\r\n} from '../../types';\r\n\r\nexport default (state, action) => {\r\n    \r\n    switch(action.type) {\r\n\r\n        case TAREAS_PROYECTO:\r\n            return {\r\n                ...state,\r\n                tareasProyecto: action.payload\r\n            }\r\n        case AGREGAR_TAREA:\r\n            return {\r\n                ...state,\r\n                tareasProyecto: [action.payload, ...state.tareasProyecto],  \r\n                // traemos las tareas que ya tenemos, mas la nueva con action.payload \r\n                // si queremos cambiar la direccion invertimos los resultados\r\n                errorTarea: false\r\n            }\r\n        case VALIDAR_TAREA:\r\n            return {\r\n                ...state,\r\n                errorTarea: true\r\n            }\r\n        case ELIMINAR_TAREA:\r\n            return {\r\n                ...state,\r\n                tareasProyecto: state.tareasProyecto.filter(tarea => tarea._id !== action.payload)\r\n            }\r\n        case ACTUALIZAR_TAREA:\r\n            return {\r\n                ...state,\r\n                tareasProyecto: state.tareasProyecto.map(tarea => tarea._id === action.payload._id ? action.payload : tarea),\r\n                tareaSeleccionada: null\r\n            }\r\n        case TAREA_ACTUAL:\r\n            return {\r\n                ...state,\r\n                tareaSeleccionada: action.payload\r\n            }\r\n        case TAREA_ERROR:\r\n            return {\r\n                ...state,\r\n                mensaje: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n\r\n    }\r\n\r\n}","import React, { useReducer } from 'react';\r\nimport TareaContext from './tareaContext';\r\nimport TareaReducer from './tareaReducer';\r\nimport TareaAxios from '../../config/axios';\r\n// import uuid from 'uuid'; se utiliza para agregar ID a los registros de manera automatica\r\n\r\nimport {\r\n    TAREAS_PROYECTO,\r\n    AGREGAR_TAREA,\r\n    VALIDAR_TAREA,\r\n    ELIMINAR_TAREA,\r\n    TAREA_ERROR,\r\n    TAREA_ACTUAL,\r\n    ACTUALIZAR_TAREA\r\n} from '../../types';\r\n\r\nconst TareaState = props => {\r\n\r\n    const initialState = {\r\n        tareasProyecto: [],\r\n        errorTarea: false,\r\n        tareaSeleccionada: null,\r\n        mensaje: null\r\n    }\r\n\r\n    // crear dispatch y state \r\n    const [state, dispatch] = useReducer(TareaReducer, initialState);\r\n\r\n    // obtener tareas de un prohjecto\r\n    const obtenerTareas = async proyecto => {\r\n        \r\n        try {\r\n            const respuesta = await TareaAxios.get('/api/tikets/tareas', { params: {proyecto}});\r\n            \r\n            dispatch({\r\n                type: TAREAS_PROYECTO,\r\n                payload: respuesta.data.tareas\r\n            });\r\n        } catch (error) {\r\n            const alerta = {\r\n                msg: \"Hubo un error al obtener las tareas\",\r\n                categoria: \"alerta-error\"\r\n            }\r\n            dispatch({\r\n                type: TAREA_ERROR,\r\n                payload: alerta\r\n            })\r\n        }\r\n    }\r\n\r\n    // agregamos una tarea al proyecto seleccionado\r\n    const agregarTarea = async tarea => {\r\n        // tarea.id = uuid.v4(); se utiliza para agregar ID a los registros de manera automatica\r\n        try {\r\n            await TareaAxios.post('/api/tikets/tareas', tarea);\r\n            \r\n            dispatch({\r\n                type: AGREGAR_TAREA,\r\n                payload: tarea\r\n            });\r\n        } catch (error) {\r\n            const alerta = {\r\n                msg: \"Hubo un error\",\r\n                categoria: \"alerta-error al agregar la tarea\"\r\n            }\r\n            dispatch({\r\n                type: TAREA_ERROR,\r\n                payload: alerta\r\n            })\r\n        }\r\n    }\r\n\r\n    // valida y muestra un error en caso de que sea necesario\r\n    const validarTarea = () => {\r\n        dispatch({\r\n            type: VALIDAR_TAREA\r\n        });\r\n    }\r\n    \r\n    const eliminarTarea = async (id, proyecto) => {\r\n        try {\r\n            await TareaAxios.delete(`/api/tikets/tareas/${id}`, { params: { proyecto }});\r\n            dispatch({\r\n                type: ELIMINAR_TAREA,\r\n                payload: id\r\n            });\r\n        } catch (error) {\r\n            const alerta = {\r\n                msg: \"Hubo un error al eliminar la tarea\",\r\n                categoria: \"alerta-error\"\r\n            }\r\n            dispatch({\r\n                type: TAREA_ERROR,\r\n                payload: alerta\r\n            })\r\n        }\r\n    }\r\n\r\n    const actualizarTarea = async tarea => {\r\n        try {\r\n            const resultado = await TareaAxios.put(`/api/tikets/tareas/${tarea._id}`, tarea);\r\n            \r\n            dispatch({\r\n                type: ACTUALIZAR_TAREA,\r\n                payload: resultado.data.tarea\r\n            });\r\n        } catch (error) {\r\n            const alerta = {\r\n                msg: \"Hubo un error al actualizar la tarea\",\r\n                categoria: \"alerta-error\"\r\n            }\r\n            dispatch({\r\n                type: TAREA_ERROR,\r\n                payload: alerta\r\n            })\r\n        }\r\n    }\r\n\r\n    const guardarTareaActual = tarea => {\r\n        dispatch({\r\n            type: TAREA_ACTUAL,\r\n            payload: tarea\r\n        });\r\n    }\r\n\r\n    return (\r\n        <TareaContext.Provider\r\n            value={{\r\n                tareasProyecto: state.tareasProyecto,\r\n                errorTarea: state.errorTarea,\r\n                tareaSeleccionada: state.tareaSeleccionada,\r\n                obtenerTareas,\r\n                agregarTarea, \r\n                validarTarea,\r\n                eliminarTarea,\r\n                guardarTareaActual,\r\n                actualizarTarea\r\n            }}\r\n        >\r\n            {props.children}\r\n        </TareaContext.Provider>\r\n    );\r\n\r\n}\r\n\r\nexport default TareaState;\r\n","import { MOSTRAR_ALERTA, OCULTAR_ALERTA } from '../../types';\n\nexport default (state, action) => {\n    \n    switch(action.type) {\n        case MOSTRAR_ALERTA:\n            return {\n                alerta: action.payload\n            }\n        case OCULTAR_ALERTA:\n            return {\n                alerta: null\n            }\n        default: \n            return state;\n\n    }\n\n}","import React, { useReducer } from 'react';\nimport { MOSTRAR_ALERTA, OCULTAR_ALERTA } from '../../types';\nimport alertaContext from './alertaContext';\nimport alertaReducer from './alertaReducer';\n\nconst AlertaState = props => {\n\n    const initialState = {\n        alerta: null\n    }\n\n    //dispatch para ejecutar las acciones\n    const [state, dispatch] = useReducer(alertaReducer, initialState)\n\n    const mostrarAlerta = (msg, categoria) => {\n        dispatch({\n            type: MOSTRAR_ALERTA,\n            payload: {\n                msg,\n                categoria\n            }\n        });\n\n        setTimeout(() => {\n            dispatch({\n                type: OCULTAR_ALERTA\n            });\n        }, 3000);\n    }\n\n    return (\n        <alertaContext.Provider\n            value={{\n                alerta: state.alerta,\n                mostrarAlerta\n            }}\n        >\n            {props.children}\n        </alertaContext.Provider>\n    );\n}\nexport default AlertaState;","import { \n    REGISTRO_EXITOSO,\n    REGISTRO_ERROR,\n    OBTENER_USUARIO,\n    LOGIN_EXITOSO,\n    LOGIN_ERROR,\n    CERRAR_SESSION\n} from '../../types';\n\nexport default (state, action) => {\n    \n    switch(action.type) {\n        case REGISTRO_EXITOSO:\n        case LOGIN_EXITOSO:    \n            localStorage.setItem('token', action.payload.token)\n            return {\n                ...state,\n                autenticado: true,\n                mensaje: null,\n                cargando: false\n            }\n        case OBTENER_USUARIO: \n            return {\n                ...state,\n                autenticado: true,\n                usuario: action.payload, \n                cargando: false\n            }\n        case CERRAR_SESSION:\n        case LOGIN_ERROR:\n        case REGISTRO_ERROR:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                token:null,\n                usuario: null,\n                mensaje: action.payload,\n                autenticado: false,\n                cargando: false\n            }\n        default: \n            return state;\n\n    }\n\n}","import clienteAxios from './axios';\n\nconst tokenAuth = token => {\n    if(token){\n        clienteAxios.defaults.headers.common['x-auth-token'] = token;\n    }else {\n        delete clienteAxios.defaults.headers.common['x-auth-token'];\n    }\n    \n}\n\nexport default tokenAuth;","import React, { useReducer } from 'react';\nimport AuthContext from './authContext';\nimport AuthReducer from './authReducer';\n\nimport clienteAxios from '../../config/axios';\nimport tokenAuth from '../../config/tokenAuth';\nimport { \n    REGISTRO_EXITOSO,\n    REGISTRO_ERROR,\n    OBTENER_USUARIO,\n    LOGIN_EXITOSO,\n    LOGIN_ERROR,\n    CERRAR_SESSION\n} from '../../types';\n\nconst AuthState = props => {\n\n    const initialState = {\n        token: localStorage.getItem('token'),\n        autenticado: null,\n        usuario: null,\n        mensaje:null,\n        cargando: true                                                              \n    }\n\n    const [ state, dispatch ] =  useReducer(AuthReducer, initialState);\n\n    // funciones para la validacion del usuario ingreso a la platagorma\n    const registrarUsuario = async datos => {\n\n        try {\n            const respuesta = await clienteAxios.post('/api/tikets/usuarios', datos);\n            dispatch({\n                type: REGISTRO_EXITOSO,\n                payload: respuesta.data\n            });\n\n            //obtenemos usuario\n            usuarioAutenticado();\n        } catch (error) {\n\n            const alerta = {\n                msg : error.response.data.msg,\n                categoria: 'alerta-error',\n            }\n            dispatch({\n                type: REGISTRO_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n    //retorna el usuario autenticado\n    const usuarioAutenticado = async () => {\n        const token = localStorage.getItem('token');\n        if(token){\n            // funcion para agregar token, por header\n            tokenAuth(token);\n        }\n        \n        try {\n            const respuesta = await clienteAxios.get('/api/tikets/auth');\n            \n            dispatch({\n                type: OBTENER_USUARIO,\n                payload: respuesta.data.usuario\n            });\n            \n        } catch (error) {\n            dispatch ({\n                type: LOGIN_ERROR\n            })\n            \n        }\n    }\n\n    // cuando el usuario inicia session\n    const iniciarSession = async datos => {\n        try {\n            const respuesta = await clienteAxios.post('/api/tikets/auth', datos);\n\n            dispatch({\n                type: LOGIN_EXITOSO,\n                payload: respuesta.data\n            });\n            usuarioAutenticado();\n        } catch (error) {\n            console.log(error.response.data.msg);\n            const alerta = {\n                msg: error.response.data.msg,\n                categoria: 'alerta-error'\n            }\n\n            dispatch({\n                type: LOGIN_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n    // cerrar la session del usuario activo\n    const cerrarSession = () => {\n        try {\n            dispatch({\n                type: CERRAR_SESSION\n            })\n        } catch (error) {\n            console.log(error.response.data.msg);\n            const alerta = {\n                msg: error.response.data.msg,\n                categoria: 'alerta-error'\n            }\n\n            dispatch({\n                type: LOGIN_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n    return(\n        <AuthContext.Provider\n        value={{\n            token: state.token,\n            autenticado: state.autenticado,\n            usuario: state.usuario,\n            mensaje: state.mensaje,\n            cargando: state.cargando,\n            registrarUsuario,\n            iniciarSession,\n            usuarioAutenticado,\n            cerrarSession\n        }}\n        >\n            {props.children}\n        </AuthContext.Provider>\n    );\n}\nexport default AuthState;","import React, {useContext, useEffect} from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthContext from '../../context/autenticacion/authContext';\n\nconst RutaPrivada = ({ component: Component, ...props }) => {\n\n    //extraer la informacion de autenticacion\n    const authContext = useContext(AuthContext);\n    const { autenticado, usuarioAutenticado, cargando } = authContext;\n\n    useEffect(() => {\n        usuarioAutenticado();\n        // eslint-disable-next-line\n    }, [])\n\n    return ( \n        <Route { ...props} render={ props => !autenticado && !cargando ? (\n            <Redirect to=\"/\" />\n        ) : (\n            <Component {...props} />\n        ) }>\n\n        </Route>\n     );\n}\n \nexport default RutaPrivada;\n","import React from 'react';\n//elementos necesarios para habilitar router en nuestro proyecto\n//BrowserRouter as Router, Switch, Route\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Login from './components/auth/Login';\nimport NuevaCuenta from './components/auth/NuevaCuenta';\nimport Proyectos from './components/proyectos/Proyectos';\n\nimport ProyectoState from './context/proyectos/proyectoState';\nimport TareaState from './context/tareas/tareaState';\nimport AlertaState from './context/alertas/alertaState';\nimport AuthState from './context/autenticacion/authState';\n\nimport tokenAuth from './config/tokenAuth';\nimport RutaPrivada from './components/rutas/rutasPrivadas';\n\nconst token = localStorage.getItem('token');\nif(token){\n  tokenAuth(token);\n}\n\n\nfunction App() {\n\n  console.log(process.env.REACT_APP_BACKEND_URL);\n  \n  return (\n      <ProyectoState>\n        <AlertaState>\n          <TareaState>\n            <AuthState>\n              <Router>\n                  <Switch>\n                    <Route exact path=\"/\" component={Login} />\n                    <Route exact path=\"/nueva-cuenta\" component={NuevaCuenta} />\n                    <RutaPrivada exact path=\"/proyectos\" component={Proyectos} />\n                  </Switch>\n                </Router>\n            </AuthState>\n          </TareaState>\n        </AlertaState>\n      </ProyectoState>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}